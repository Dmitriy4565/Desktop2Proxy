package scanners

import (
	"bufio"
	"desktop2proxy/models"
	"fmt"
	"net"
	"os"
	"strconv"
	"time"
)

func ConnectTelnet(target models.Target, port int) error {
	fmt.Printf("üìü –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telnet %s:%d...\n", target.IP, port)

	conn, err := net.DialTimeout("tcp", net.JoinHostPort(target.IP, strconv.Itoa(port)), 10*time.Second)
	if err != nil {
		return fmt.Errorf("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: %v", err)
	}
	defer conn.Close()

	fmt.Println("‚úÖ Telnet –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ! –î–ª—è –≤—ã—Ö–æ–¥–∞: Ctrl+C")

	// –ß—Ç–µ–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
	go func() {
		scanner := bufio.NewScanner(conn)
		for scanner.Scan() {
			fmt.Println(scanner.Text())
		}
	}()

	// –ß—Ç–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
	scanner := bufio.NewScanner(os.Stdin)
	for scanner.Scan() {
		text := scanner.Text()
		if text == "exit" || text == "quit" {
			break
		}
		_, err := conn.Write([]byte(text + "\r\n"))
		if err != nil {
			fmt.Printf("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: %v\n", err)
			break
		}
	}

	return nil
}
